# version: '3.8'

services:
  nginx:
    # nginxのバージョン指定
    image: nginx:1.21.1
    # ポート番号をホスト：コンテナ形式で80に指定
    ports:
      - "80:80"
    # ローカルのdefault.confとsrcディレクトリをコンテナにマウント
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./src:/var/www/
    # phpの後にnginxを起動する設定
    depends_on:
      - php

  php:
    # 指定したディレクトリにあるDockerfileを基にビルドする
    build: ./docker/php
    # 一般ユーザーでLaravelを扱えるようにあらかじめ設定を入力。
    user: "1000:1000"
    #　コンテナ内の/var/www/に./srcをマウント
    volumes:
      - ./src:/var/www/

  mysql:
    # mysqlのバージョン指定
    image: mysql:8.0.26
    # mysqlで使用するrootと一般ユーザーの設定
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: laravel_db
      MYSQL_USER: laravel_user
      MYSQL_PASSWORD: laravel_pass
    command: mysqld --default-authentication-plugin=mysql_native_password
    volumes:
      - ./docker/mysql/data:/var/lib/mysql
      - ./docker/mysql/my.conf:/etc/mysql/conf.d/my.cnf

  phpmyadmin:
    # phpMyadminのイメージ設定
    image: phpmyadmin/phpmyadmin
    # mysqlで作成するDBのユーザー名とパスワードを設定
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=mysql
      - PMA_USER=laravel_user
      - PMA_PASSWORD=laravel_pass
    # docker-compose起動時にmysqlが実行された後にphpMyadminを実行する
    depends_on:
      - mysql
    # ポート番号指定：ホスト8080、コンテナ側80
    ports:
      - 8080:80
